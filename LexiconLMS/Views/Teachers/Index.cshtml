@model IEnumerable<LexiconLMS.ViewModels.TeacherListVM>

@{
    ViewBag.Title = "Teachers at Lexicon";
}

<h1>@ViewBag.Title</h1>
<p>
    @Html.ActionLink("Add Teacher", "Create", new { }, new { @class = "btn btn-default btn-add" })
</p>

<form method="GET" action="/Teachers/Index" style="float:left">
    @Html.TextBox("searchOn")
    <input type="submit" value="Search" />
</form>

<form method="GET" action="/Teachers/Index">
    <input class="left-margin-for-reset-button" type="submit" value="Reset" />
</form>
<hr class="thick-divider-line" />

<table class="table">
    <tr>
        <th>
            @if (ViewBag.SortOrderFirstName == "firstname_desc")
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.FirstName).ToString()), "Index", new { sortOn = "firstname_desc", searchOn = ViewBag.SearchOn })
            }
            else
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.FirstName).ToString()), "Index", new { sortOn = "firstname_asc", searchOn = ViewBag.SearchOn })
            }
        </th>
        <th>
            @if (ViewBag.sortOrderLastName == "lastname_desc")
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.LastName).ToString()), "Index", new { sortOn = "lastname_desc", searchOn = ViewBag.SearchOn })
            }
            else
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.LastName).ToString()), "Index", new { sortOn = "lastname_asc", searchOn = ViewBag.SearchOn })
            }
        </th>
        <th>
            @if (ViewBag.SortOrderEmail == "email_desc")
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.Email).ToString()), "Index", new { sortOn = "email_desc", searchOn = ViewBag.SearchOn })
            }
            else
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.Email).ToString()), "Index", new { sortOn = "email_asc", searchOn = ViewBag.SearchOn })
            }
        </th>
        <th>
            @if (ViewBag.SortOrderPhoneNumber == "phonenumber_desc")
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.PhoneNumber).ToString()), "Index", new { sortOn = "phonenumber_desc", searchOn = ViewBag.SearchOn })
            }
            else
            {
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.PhoneNumber).ToString()), "Index", new { sortOn = "phonenumber_asc", searchOn = ViewBag.SearchOn })
            }
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-default btn-edit" })
                ´<br />
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-default btn-delete" })
            </td>
        </tr>
    }

</table>
