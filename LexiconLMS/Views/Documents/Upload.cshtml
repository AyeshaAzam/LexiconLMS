@model LexiconLMS.ViewModels.UploadVM

@using (Html.BeginForm("Upload", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ActivityId)
    @Html.HiddenFor(model => model.CourseId)
    @Html.HiddenFor(model => model.ModuleId)
    @Html.HiddenFor(model => model.AssignmentDocId)
    @Html.HiddenFor(model => model.ReturnTo)

    <div class="form-horizontal">
        <h1>Upload Document</h1>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label for="uploadFile" class = "control-label col-md-2">File:</label>
            <div class="col-md-10">
                <input type="file" name="uploadFile", id="uploadFile" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurposeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PurposeId",null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PurposeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="DeadlineDiv" style="">
            @Html.LabelFor(model => model.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeadLine, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.DeadLine, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-default btn-upload btn-with-cancel" />
                <a href="#" onclick="window.history.back()" class="cancel-link">Back</a>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


